// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package internaltransferssystem

import (
	context "context"
	httpbody "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// InternalTransfersSystemClient is the client API for InternalTransfersSystem service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InternalTransfersSystemClient interface {
	// LivenessProbe for the service
	HealthCheck(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	// ReadinessProbe for the service
	ReadyCheck(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error)
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
	Error(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
	GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error)
}

type internalTransfersSystemClient struct {
	cc grpc.ClientConnInterface
}

func NewInternalTransfersSystemClient(cc grpc.ClientConnInterface) InternalTransfersSystemClient {
	return &internalTransfersSystemClient{cc}
}

func (c *internalTransfersSystemClient) HealthCheck(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/ggithub.com.wdevarshi.InternalTransfersSystem/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalTransfersSystemClient) ReadyCheck(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*httpbody.HttpBody, error) {
	out := new(httpbody.HttpBody)
	err := c.cc.Invoke(ctx, "/ggithub.com.wdevarshi.InternalTransfersSystem/ReadyCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalTransfersSystemClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/ggithub.com.wdevarshi.InternalTransfersSystem/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalTransfersSystemClient) Error(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/ggithub.com.wdevarshi.InternalTransfersSystem/Error", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalTransfersSystemClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	out := new(CreateAccountResponse)
	err := c.cc.Invoke(ctx, "/ggithub.com.wdevarshi.InternalTransfersSystem/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalTransfersSystemClient) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error) {
	out := new(GetAccountResponse)
	err := c.cc.Invoke(ctx, "/ggithub.com.wdevarshi.InternalTransfersSystem/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternalTransfersSystemServer is the server API for InternalTransfersSystem service.
// All implementations should embed UnimplementedInternalTransfersSystemServer
// for forward compatibility
type InternalTransfersSystemServer interface {
	// LivenessProbe for the service
	HealthCheck(context.Context, *emptypb.Empty) (*httpbody.HttpBody, error)
	// ReadinessProbe for the service
	ReadyCheck(context.Context, *emptypb.Empty) (*httpbody.HttpBody, error)
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
	Error(context.Context, *EchoRequest) (*EchoResponse, error)
	CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error)
	GetAccount(context.Context, *GetAccountRequest) (*GetAccountResponse, error)
}

// UnimplementedInternalTransfersSystemServer should be embedded to have forward compatible implementations.
type UnimplementedInternalTransfersSystemServer struct {
}

func (UnimplementedInternalTransfersSystemServer) HealthCheck(context.Context, *emptypb.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}
func (UnimplementedInternalTransfersSystemServer) ReadyCheck(context.Context, *emptypb.Empty) (*httpbody.HttpBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadyCheck not implemented")
}
func (UnimplementedInternalTransfersSystemServer) Echo(context.Context, *EchoRequest) (*EchoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (UnimplementedInternalTransfersSystemServer) Error(context.Context, *EchoRequest) (*EchoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Error not implemented")
}
func (UnimplementedInternalTransfersSystemServer) CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}
func (UnimplementedInternalTransfersSystemServer) GetAccount(context.Context, *GetAccountRequest) (*GetAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}

// UnsafeInternalTransfersSystemServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InternalTransfersSystemServer will
// result in compilation errors.
type UnsafeInternalTransfersSystemServer interface {
	mustEmbedUnimplementedInternalTransfersSystemServer()
}

func RegisterInternalTransfersSystemServer(s grpc.ServiceRegistrar, srv InternalTransfersSystemServer) {
	s.RegisterService(&InternalTransfersSystem_ServiceDesc, srv)
}

func _InternalTransfersSystem_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalTransfersSystemServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ggithub.com.wdevarshi.InternalTransfersSystem/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalTransfersSystemServer).HealthCheck(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalTransfersSystem_ReadyCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalTransfersSystemServer).ReadyCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ggithub.com.wdevarshi.InternalTransfersSystem/ReadyCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalTransfersSystemServer).ReadyCheck(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalTransfersSystem_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalTransfersSystemServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ggithub.com.wdevarshi.InternalTransfersSystem/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalTransfersSystemServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalTransfersSystem_Error_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalTransfersSystemServer).Error(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ggithub.com.wdevarshi.InternalTransfersSystem/Error",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalTransfersSystemServer).Error(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalTransfersSystem_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalTransfersSystemServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ggithub.com.wdevarshi.InternalTransfersSystem/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalTransfersSystemServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalTransfersSystem_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalTransfersSystemServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ggithub.com.wdevarshi.InternalTransfersSystem/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalTransfersSystemServer).GetAccount(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InternalTransfersSystem_ServiceDesc is the grpc.ServiceDesc for InternalTransfersSystem service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InternalTransfersSystem_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ggithub.com.wdevarshi.InternalTransfersSystem",
	HandlerType: (*InternalTransfersSystemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HealthCheck",
			Handler:    _InternalTransfersSystem_HealthCheck_Handler,
		},
		{
			MethodName: "ReadyCheck",
			Handler:    _InternalTransfersSystem_ReadyCheck_Handler,
		},
		{
			MethodName: "Echo",
			Handler:    _InternalTransfersSystem_Echo_Handler,
		},
		{
			MethodName: "Error",
			Handler:    _InternalTransfersSystem_Error_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _InternalTransfersSystem_CreateAccount_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _InternalTransfersSystem_GetAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internaltransferssystem.proto",
}
